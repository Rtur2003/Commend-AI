import google.generativeai as genai
from ..config import Config

# API anahtarını yapılandır
GEMINI_API_KEY = Config.GEMINI_API_KEY
if not GEMINI_API_KEY:
    print("ERROR: GEMINI_API_KEY not found in .env file.")
    model = None
else:
    try:
        genai.configure(api_key=GEMINI_API_KEY)
        model = genai.GenerativeModel('gemini-1.5-flash')
    except Exception as e:
        print(f"Error configuring Gemini API: {e}")
        model = None

def summarize_transcript(transcript_text, language):
    """Video transcript'ini özetler."""
    if not model:
        return "Gemini API bağlanamadı.", True
    
    if not transcript_text or len(transcript_text.strip()) < 50:
        return "Yetersiz transcript verisi.", True
    
    # Transcript çok uzunsa kısalt (token limiti için)
    if len(transcript_text) > 8000:
        transcript_text = transcript_text[:8000] + "..."
    
    prompt = f"""
Bu video transcript'ini {language} dilinde 2-3 cümlelik kısa bir özet haline getir:

{transcript_text}

ÖNEMLİ: Sadece özetin kendisini yaz, başka açıklama yapma.
"""
    
    try:
        response = model.generate_content(prompt)
        return response.text.strip(), None
    except Exception as e:
        print(f"Transcript özetleme hatası: {e}")
        return "Transcript özetlenemedi.", True

def generate_comment_text(details, comment_style, language, existing_comments=None, transcript_summary=None):
    if not model:
        return "Gemini API is not configured correctly. Please check your API key.", True

    comment_section = "No comments available to analyze."
    if existing_comments:
        comment_section = "\n".join(
            [f"- '{c['text']}' (by {c['author']})" for c in existing_comments]
        )

    # --- GELİŞTİRİLMİŞ YORUM ÜRETME PROMPT'U ---
    prompt_template = f"""
### GÖREVİN ###
Sen Hasan Arthur Altuntaş tarafından geliştirilen CommendAI'sın. Görevin: YouTube videolarına özgün, yaratıcı ve değerli yorumlar üretmek. Yorum dili: **{language}**.

### VİDEO ANALİZİ ###
**Mevcut Yorumlar (ÖNCELİKLİ):**
{comment_section}

**Video İçeriği (ÖNCELİKLİ):**
{f"- Özet: {transcript_summary}" if transcript_summary else "- İçerik özeti mevcut değil"}

**Video Bilgileri (YARDIMCI):**
- Başlık: {details['title']}
- Kanal: {details['channel_name']}
- Açıklama: {details['description'][:300]}

**İstatistikler (YARDIMCI):**
- İzlenme: {details.get('view_count', 'Bilinmiyor')}
- Beğeni: {details.get('like_count', 'Bilinmiyor')}

### YORUM STRATEJİSİ ###
**{comment_style}** stilinde yorum yaz:

1. **Gerçekçilik:** Normal bir izleyici gibi yaz, abartma. 
2. **Emoji Sınırı:** Hiç emoji kullanma veya en fazla 1 adet kullan.
3. **Doğallık:** Samimi ama sade bir dil kullan.
4. **Video Odak:** Videonun içeriğini ve mevcut yorumları ön planda tut.
5. **Kısalık:** Uzun yorumlardan kaçın, net ve öz ol.

### YORUM KURALLARI ###
- **Dil:** Tamamen **{language}** dilinde yaz (disclaimer dahil)
- **Uzunluk:** 1-3 cümle arası, kısa ve etkili
- **Ton:** Video konusuna uygun (ciddi/eğlenceli/destekleyici)
- **Özgünlük:** Klişe ifadelerden kaçın
- **Disclaimer:** Yorumun sonuna yeni satırda disclaimer ekle:
  - Turkish: "Not: Bu yorum AI tarafından üretilmiştir."
  - English: "Note: This comment was generated by AI."
  - Russian: "Примечание: Этот комментарий создан ИИ."
  - Chinese: "注：此评论由AI生成。"
  - Japanese: "注：このコメントはAIによって生成されました。"

### ÖRNEKLER ###
Kötü: "Harika video! Çok beğendim!"
İyi: "3:45'teki o detay gerçekten önemli bir noktaydı, bu konuya hiç bu açıdan bakmamıştım."

**Yorumun:**
"""

    try:
        response = model.generate_content(prompt_template)
        return response.text, None
    except Exception as e:
        print(f"An error occurred during Gemini API call: {e}")
        return f"Error generating comment: {e}", True
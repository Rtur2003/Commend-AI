import google.generativeai as genai
from ..config import Config
import os

GEMINI_API_KEY = Config.GEMINI_API_KEY
if not GEMINI_API_KEY:
    print("ERROR: GEMINI_API_KEY not found in .env file.")
    model = None
else:
    try:
        genai.configure(api_key=GEMINI_API_KEY)
        model = genai.GenerativeModel('gemma-3-27b-it')
    except Exception as e:
        print(f"Error configuring Gemini API: {e}")
        model = None

def generate_comment_text(details, comment_style, language): # Dil parametresini ekledik
    """Verilen video detayları, stil ve dile göre Gemini'dan bir yorum metni üretir."""
    if not model:
        return "Gemini API is not configured correctly. Please check your API key.", True

    # YENİ VE GELİŞTİRİLMİŞ PROMPT
# gemini_service.py dosyasının içindeki prompt_template değişkenini bulun ve değiştirin.
# Geri kalan kod aynı kalacak.

    prompt_template = f"""
### ROLE ###
You are CommendAI, a witty, passionate, and slightly dramatic YouTube connoisseur. Your comments are insightful and authentic.

### TASK ###
Generate a comment in the requested language ({language}).

### RULES ###
1.  **Style:** Your tone must be passionate and hyperbolic. Start with a dramatic hook. Use a creative analogy to praise the video's quality and how it surpasses typical content.
2.  **Emojis:** Use 1 to 3 relevant emojis to enhance the tone, but do not overdo it. For example: 🔥, 🤯, 👏, 💯.
3.  **Language:** The ENTIRE response MUST be in the requested language: **{language}**.
4.  **Disclaimer:** At the very end, on a new line, add the specific disclaimer. If the language is Turkish, use "Not: Bu yorum bir yapay zeka tarafından oluşturulmuştur.". Otherwise, translate it appropriately (e.g., "Note: This comment was generated by an AI." for English).

### INPUT DATA ###
- Video Title: {details['title']}
- Channel Name: {details['channel_name']}
- Video Description: {details['description'][:500]}

### GENERATED COMMENT (in {language}): ###
"""

    try:
        response = model.generate_content(prompt_template)
        return response.text, None
    except Exception as e:
        print(f"An error occurred during Gemini API call: {e}")
        return f"Error generating comment: {e}", True